@startuml
class Reactive {
  +var level: Int
  +val timestamps: Buffer[Stamp]
}

class DepHolder {
  +val dependents: Buffer[Dependent]
  __
  +addDependent(Dependent)
  +removeDependent(Dependent)
  +notifyDependents(Any)
}
Reactive <|-- DepHolder

class Dependent {
  +val dependOn: Buffer[DepHolder]
  __
  +addDependOn(DepHolder)
  +removeDependOn(DepHolder)
  +dependsOnchanged(Any, DepHolder)
  #triggerReevaluation()
}
Reactive <|-- Dependent

class "ReactiveValue[+A]" as ReactiveValue {
  +getValue(): A
  +apply(): A
  +apply(SignalSynt[_]): A
  #reEvaluate(): A
  +map[B](f: A => B): ReactiveValue[B]
}
DepHolder <|-- ReactiveValue
FoldableReactive <|-- ReactiveValue

class "Var[A]" as Var {
  __
  +setValue(A): Unit
  +update(A)
  +toSignal(): Signal[A]
}
ReactiveValue <|-- Var

class "Signal[+A]" as Signal {
  __
  +snapshot(Event[_]): Signal[A]
  +switchTo[U >: A](Event[U]): Signal[U]
  +switchOnce[V >: A](Event[_])(Signal[V]): Signal[V]
  +toggle[V >: A](Event[_])(Signal[V])
  +delay(Int): Signal[A]
}
Dependent <|-- Signal
ReactiveValue <|-- Signal

class "Event[+A]" as Event {
  __
  ++=(A => Unit)
  +-=(A => Unit)
  +||(Event)
  +&&(Event)
  +filter[U >: A](U => Boolean): Event[U]
  +\\\[U >: A](Event[U]): Event[U]
  +map[U, S >: A](S => U): Event[U]
  ..
  rest omitted ...
}
DepHolder <|-- Event

class "FoldableReactive[+A]" as FoldableReactive {
  __
  + {abstract} fold[B](B)((B, A) => B): ReactiveValue[B]
  ..
  +iterate[B](B)(f: B => B): ReactiveValue[B]
  +count(): ReactiveValue[Int]
  +latestOption(): ReactiveValue[Option[A]]
  +list(): ReactiveValue[Seq[A]]
  +last(Int): ReactiveValue[Seq[A]]
}

class "Changing[+A]" as Changing {
  +lazy val change: Event[A,A]
  +lazy val changed: Event[A]
  __
  +def changedTo[V](value: V): Event[Unit]
}
Changing <|-- ReactiveValue


class Signal << (T,#4682b4) >>
class Var << (T,#4682b4) >>
class DepHolder << (T,#4682b4) >>
class Dependent << (T,#4682b4) >>
class Reactive << (T,#4682b4) >>
class Event << (T,#4682b4) >>
class ReactiveValue << (T,#4682b4) >>
class Changing << (T,#4682b4) >>
class FoldableReactive << (T,#4682b4) >>
@enduml
